# Reference: https://galaxyproject.github.io/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html

# Galaxy
galaxy_release_number: 19.05
galaxy_commit_id: "release_{{galaxy_release_number}}"
galaxy_user_name: galaxy
galaxy_user_group: galaxy
server_name: "{{inventory_hostname}}"
uwsgi_socket: 127.0.0.1:8080
install_path: /srv/galaxy

#Booleans
install_nginx: true
install_supervisor: true
create_db: true
install_miniconda: true
sys_prep: true

# Admin Credentials 
galaxy_admin_emails: admin@example.org
galaxy_admin_pw: pw
default_admin_api_key: ''

# PostgreSQL
postgresql_objects_users:
  - name: "{{galaxy_user_name}}"
    password: "{{galaxy_user_name}}"
    encrypted: "yes"
postgresql_objects_databases:
  - name: "{{galaxy_user_name}}"
    owner: "{{galaxy_user_name}}"

# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: "{{install_path}}"
galaxy_file_path: /data
galaxy_user: {name: "{{galaxy_user_name}}", shell: /bin/bash}
galaxy_config_style: yaml
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"

#Tools
galaxy_tools_install_tools: no
galaxy_tools_galaxy_instance_url: "{{server_name}}"
galaxy_tools_tool_list_files: [ "files/tools_list.yaml" ]
galaxy_tools_api_key: "{{default_admin_api_key}}"

# galaxy_tools_admin_user: "{{galaxy_admin_emails}}"
# galaxy_tools_admin_user_password: "{{galaxy_admin_pw}}"
# galaxy_tools_admin_user_preset_api_key: yes
# galaxy_tools_create_bootstrap_user: yes

galaxy_config:
  galaxy:
    brand: "BCCDC Galaxy"
    admin_users: "{{galaxy_admin_emails}}"
    database_connection: "postgresql:///{{galaxy_user_name}}?host=/var/run/postgresql"
    file_path: "{{ galaxy_file_path }}"
    check_migrate_tools: false
    shed_tool_data_dir: "{{ galaxy_mutable_data_dir }}/tool-data"
    tool_sheds_config_file: "{{ galaxy_server_dir }}/config/tool_sheds_conf.xml"
  uwsgi:
    # Default values
    socket: "{{uwsgi_socket}}"
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

# Automatically restart Galaxy by calling a handler named 'Restart
# Galaxy', whenever the server changes.
galaxy_restart_handler_name: Restart Galaxy

# supervisord
supervisor_socket_user: "{{galaxy_user_name}}"
supervisor_socket_chown: "{{galaxy_user_name}}"
supervisor_programs:
  - name: galaxy
    state: present
    command: "uwsgi --yaml {{ galaxy_config_dir }}/galaxy.yml"
    configuration: |
      autostart=true
      autorestart=true
      startretries=1
      startsecs=10
      user=galaxy
      umask=022
      directory={{ galaxy_server_dir }}
      environment=HOME={{ galaxy_mutable_data_dir }},VIRTUAL_ENV={{ galaxy_venv_dir }},PATH={{ galaxy_venv_dir }}/bin:%(ENV_PATH)s

# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: staging
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
 - "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - galaxy # NOT redirect-ssl
# nginx_servers:
#   - redirect-ssl
nginx_enable_default_server: false
# nginx_ssl_servers:
#   - galaxy
nginx_conf_http:
  client_max_body_size: 10g
nginx_remove_default_vhost: true
# nginx_ssl_role: usegalaxy-eu.certbot
# nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
# nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

#IE
interactive_environments_install_method: inplace